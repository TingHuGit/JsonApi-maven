<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
  PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
  "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
	
	<!--  属性标签严格按照  properties、classPathEntry、context 顺序  -->
	
	<!--导入属性配置 -->
	<properties resource="jdbc.properties" />

	<!--指定特定数据库的jdbc驱动jar包的位置 -->
	<!-- <classPathEntry location="${jdbc.driver}" /> -->
	<!-- 数据库驱动  (一定要绝对路径)-->
	<classPathEntry location="C:\Users\WBSHXZ_HUTING\Desktop\mybatis-generator\lib\ojdbc14-10.2.0.4.0.jar" 
		/>
	<!-- 选择运行的mybatis版本 -->
	<context id="DB2Tables" targetRuntime="MyBatis3">
		<commentGenerator>
			<property name="suppressDate" value="false" />
			<property name="suppressAllComments" value="true" /><!-- 是否去除自动生成的注释 true：是 ： false:否 -->
		</commentGenerator>
		
		<!--数据库链接URL，用户名、密码 -->
		<!-- <jdbcConnection 
			driverClass="oracle.jdbc.driver.OracleDriver"
			connectionURL="jdbc:oracle:thin:@localhost:1521:orcl" 
			userId="tinghu"
			password="ht1234">
		</jdbcConnection> -->
		
		<jdbcConnection 
			driverClass="${jdbc.driver}"
			connectionURL="${jdbc.url}" 
			userId="${jdbc.username}"
			password="${jdbc.password}">
		</jdbcConnection>

		<!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL 
			和 NUMERIC 类型解析为java.math.BigDecimal -->
		<javaTypeResolver>
			<property name="forceBigDecimals" value="false" />
		</javaTypeResolver>

		<!-- 生成模型的包名和位置 -->
		<!-- Model模型生成器,用来生成含有主键key的类，记录类 以及查询Example类
            targetPackage     指定生成的model生成所在的包名
            targetProject     指定在该项目下所在的路径
        -->
        
		<!-- targetPackage:生成文件的包名 targetProject：项目名称 -->
		<javaModelGenerator targetPackage="org.tinghu.business.entity"
			targetProject="JsonApi-maven">
			<property name="enableSubPackages" value="true" />
			<property name="trimStrings" value="true" />
            <property name="constructorBased" value="true"/>	<!-- 是否对model添加 构造函数 -->
		</javaModelGenerator>

		<!-- 生成映射文件的包名和位置 -->
		<!--mapper xml映射文件生成所在的目录 为每一个数据库的表生成对应的SqlMap文件 -->
		<sqlMapGenerator targetPackage="org.tinghu.business.mapper"
			targetProject="JsonApi-maven">
			<property name="enableSubPackages" value="true" />
		</sqlMapGenerator>

		<!-- 生成mapper接口文件位置 -->
		<!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件 的代码
                type="ANNOTATEDMAPPER",生成Java Model 和基于注解的Mapper对象
                type="MIXEDMAPPER",生成基于注解的Java Model 和相应的Mapper对象
                type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口
        -->
		<javaClientGenerator type="XMLMAPPER"
			targetPackage="org.tinghu.business.dao" targetProject="JsonApi-maven">
			 <!-- enableSubPackages:是否让schema作为包的后缀 -->
			<property name="enableSubPackages" value="true" />
		</javaClientGenerator>

		<!-- 要生成的表 tableName是数据库中的表名或视图名 domainObjectName是实体类名 -->
		<!-- 需要生成的实体类对应的表名，多个实体类复制多份该配置即可 -->

		<!-- <table tableName="user_t" domainObjectName="User"
			enableCountByExample="false" enableUpdateByExample="false"
			enableDeleteByExample="false" enableSelectByExample="false"
			selectByExampleQueryId="false">
			<columnOverride column="ID" javaType="java.lang.Integer"></columnOverride>
		</table> -->
		
		<table tableName="CK_RENEWALRATE" domainObjectName="Rate"
			enableCountByExample="false" enableUpdateByExample="false"
			enableDeleteByExample="false" enableSelectByExample="false"
			selectByExampleQueryId="false">
			<!-- <columnOverride column="ID" javaType="java.lang.Integer"></columnOverride> -->
		</table>
		<!-- <table tableName="FACT_SJQT_FXZB" domainObjectName="Fact_sjqt_fxzb"
			enableCountByExample="false" enableUpdateByExample="false"
			enableDeleteByExample="false" enableSelectByExample="false"
			selectByExampleQueryId="false">
		</table>
		<table tableName="FACT_SJQT_RISKPREM" domainObjectName="Fact_sjqt_riskprem"
			enableCountByExample="false" enableUpdateByExample="false"
			enableDeleteByExample="false" enableSelectByExample="false"
			selectByExampleQueryId="false">
		</table> -->
	</context>
</generatorConfiguration>